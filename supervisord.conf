[unix_http_server]
file=/var/run/supervisor.sock   ; Supervisor socket in /var/run
chmod=0700                      ; Socket file permissions
chown=root:root                 ; Ownership (optional)

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisord]
nodaemon=true                   ; Keep Supervisor in the foreground
user=root
;loglevel=debug
logfile=/dev/null               ; Do not log to a file, logs go to stdout/stderr
pidfile=/var/run/supervisord.pid ; PID file in /var/run
childlogdir=/var/log/supervisor  ; Log directory for child processes, useful for debugging

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock ; Use the socket in /var/run for supervisorctl

[program:hbase]
command=/opt/hbase/bin/hbase master start
stdout_logfile=/dev/stdout                  ; Send stdout to Docker's stdout
stderr_logfile=/dev/stderr                  ; Send stderr to Docker's stderr
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
priority=1

[program:hbase-rest]
command=/opt/hbase/bin/hbase-daemon.sh start rest
stdout_logfile=/dev/stdout
stderr_logfile=/dev/stderr
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
priority=2

[program:hbase-thrift]
command=/opt/hbase/bin/hbase-daemon.sh start thrift
stdout_logfile=/dev/stdout
stderr_logfile=/dev/stderr
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
priority=2

[program:archival-rpc]
command=/usr/local/bin/start-rpc.sh %(ENV_RPC_ARGS)s
stdout_logfile=/dev/stdout
stderr_logfile=/dev/stderr
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
autostart=true
autorestart=true
startretries=3
priority=4

[program:ingestor-rpc]
command=/usr/local/bin/start-ingestor.sh %(ENV_INGESTOR_ARGS)s
stdout_logfile=/dev/stdout
stderr_logfile=/dev/stderr
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
autostart=true
autorestart=true
startretries=1
priority=5



